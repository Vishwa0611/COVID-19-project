<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Latest Covid-19 India Status' inline='true' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Latest Covid-19 India Status' name='textscan.0jv3tom1b5gwfs1a6rz7q1gtxyq2'>
            <connection class='textscan' directory='D:/COVID-19 project/archive' filename='Latest Covid-19 India Status.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0jv3tom1b5gwfs1a6rz7q1gtxyq2' name='Latest Covid-19 India Status.csv' table='[Latest Covid-19 India Status#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='State/UTs' ordinal='0' />
            <column datatype='integer' name='Total Cases' ordinal='1' />
            <column datatype='integer' name='Active' ordinal='2' />
            <column datatype='integer' name='Discharged' ordinal='3' />
            <column datatype='integer' name='Deaths' ordinal='4' />
            <column datatype='real' name='Active Ratio' ordinal='5' />
            <column datatype='real' name='Discharge Ratio' ordinal='6' />
            <column datatype='real' name='Death Ratio' ordinal='7' />
            <column datatype='integer' name='Population' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UTs</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UTs]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>State/UTs</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Discharged]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Discharged</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Ratio]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Active Ratio</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharge Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discharge Ratio]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Discharge Ratio</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Ratio]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Death Ratio</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Latest Covid-19 India Status.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Active (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Active]' peg='0' size='158' />
      </column>
      <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_1248060057923932160]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Deaths] / [Total Cases]) * 100' />
      </column>
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Latest Covid-19 India Status.csv' datatype='table' name='[__tableau_internal_object_id__].[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]' role='measure' type='quantitative' />
      <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State/UTs)' hidden='true' name='[Action (State/UTs)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State/UTs]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ayush/AppData/Local/Temp/TableauTemp/#TableauTemp_0m2y14t0u01ga61ahmipd03rnh3n.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/18/2025 10:19:40 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State/UTs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State/UTs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State/UTs</remote-alias>
              <ordinal>0</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>2</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discharged</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Discharged]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discharged</remote-alias>
              <ordinal>3</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Active Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active Ratio</remote-alias>
              <ordinal>5</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discharge Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discharge Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discharge Ratio</remote-alias>
              <ordinal>6</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death Ratio</remote-alias>
              <ordinal>7</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>8</ordinal>
              <family>Latest Covid-19 India Status.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-20' type='palette'>
            <map to='#8c564b'>
              <bucket>&quot;[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UTs:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Latest Covid-19 India Status.csv' id='Latest Covid-19 India Status.csv_EB5CBB6E6EC646369E08ED18BEEDAEC2'>
            <properties context=''>
              <relation connection='textscan.0jv3tom1b5gwfs1a6rz7q1gtxyq2' name='Latest Covid-19 India Status.csv' table='[Latest Covid-19 India Status#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State/UTs' ordinal='0' />
                  <column datatype='integer' name='Total Cases' ordinal='1' />
                  <column datatype='integer' name='Active' ordinal='2' />
                  <column datatype='integer' name='Discharged' ordinal='3' />
                  <column datatype='integer' name='Deaths' ordinal='4' />
                  <column datatype='real' name='Active Ratio' ordinal='5' />
                  <column datatype='real' name='Discharge Ratio' ordinal='6' />
                  <column datatype='real' name='Death Ratio' ordinal='7' />
                  <column datatype='integer' name='Population' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action5_C90AB93CB26E44F79EB6FC6A01CD6C13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Discharged states' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action6_A7381692B4814F72855AFC438554DDCA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Top 10 state with Cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action7_C1848A6D2EF5481CA998BC44313B11DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Mortality Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action8_299D7FF07B1A4ACC8E5E068D5C5FF95F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Total Cases v/s Deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_DA82B79740394D8E879B7260EC006488]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Dual axis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Discharged states'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Semibold'>Top 10 States with Highest Discharged Patient</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discharged]' derivation='Avg' name='[avg:Discharged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action9_D01B7FCC5DC742ED83BDFD59F06435EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Discharged])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' />
              <size column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[avg:Discharged:qk]' />
              <text column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D387B397-B66B-480C-AEFD-864241F8FD9D}' />
    </worksheet>
    <worksheet name='Dual axis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action9_D01B7FCC5DC742ED83BDFD59F06435EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Population:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Population:qk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' value='91' />
            <format attr='width' field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' value='43' />
            <format attr='width' field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]' value='43' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk] + [federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk])</rows>
        <cols>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{BE27D1BA-106A-4C49-BE46-3D9912C1196D}' />
    </worksheet>
    <worksheet name='Mortality Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Benton Sans Book'>Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column caption='Mortality Rate' datatype='real' name='[Calculation_1248060057923932160]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Deaths] / [Total Cases]) * 100' />
            </column>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1248060057923932160]' derivation='Sum' name='[sum:Calculation_1248060057923932160:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action5_C90AB93CB26E44F79EB6FC6A01CD6C13]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1248060057923932160])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Nagaland&quot;</bucket>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Andaman and Nicobar&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Sikkim&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Telengana&quot;</bucket>
              <bucket>&quot;Lakshadweep&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' value='29' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='290' />
                <format attr='maxwidth' value='290' />
                <format attr='minheight' value='248' />
                <format attr='maxheight' value='248' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Calculation_1248060057923932160:qk]</rows>
        <cols>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{0CED1B7D-27DB-4782-91B6-E0B0D72589FC}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Tw Cen MT Condensed Extra Bold' fontsize='24'>*/*/*/*Covid 19 Dashboard*\*\*\*</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3D3BF63C-2EE4-4659-AAD8-EF9F504ABDA6}' />
    </worksheet>
    <worksheet name='Top 10 state with Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Semibold'>Top 10 States with Highest Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action9_D01B7FCC5DC742ED83BDFD59F06435EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total Cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Total Cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Total Cases:qk]</rows>
        <cols>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</cols>
      </table>
      <simple-id uuid='{C61B598A-7012-47BB-926A-7354E61DB06B}' />
    </worksheet>
    <worksheet name='Total Cases v/s Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Semibold'>Total Cases v/s Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Discharged]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discharged]' derivation='Sum' name='[sum:Discharged:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action9_D01B7FCC5DC742ED83BDFD59F06435EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Active])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UTs:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</column>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' />
              <size column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]</rows>
        <cols>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Total Cases:qk]</cols>
      </table>
      <simple-id uuid='{38E956F4-B991-4C3A-942B-4E896CFFB1E6}' />
    </worksheet>
    <worksheet name='Total Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Semibold'>Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UTs]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UTs]' derivation='None' name='[none:State/UTs:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]'>
            <groupfilter function='level-members' level='[State/UTs]' user:ui-action-filter='[Action9_D01B7FCC5DC742ED83BDFD59F06435EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Action (State/UTs)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Deaths:qk]' />
              <lod column='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#818b91' />
                <format attr='has-halo' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Latitude (generated)]</rows>
        <cols>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C170BE10-6561-4DF7-873D-3D9B23FB6EBC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Latest Covid-19 India Status' name='federated.1xgxz7r0hljygb1bkli3v1ed0fbb' />
      </datasources>
      <datasource-dependencies datasource='federated.1xgxz7r0hljygb1bkli3v1ed0fbb'>
        <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
        <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='39130' id='3' name='Top 10 state with Cases' w='41455' x='48492' y='9401' />
        <zone h='51469' id='4' name='Total Deaths' w='34299' x='65523' y='48296' />
        <zone h='50999' id='5' name='Discharged states' w='22945' x='42519' y='48531' />
        <zone h='25617' id='6' name='Discharged states' pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' type-v2='color' w='9521' x='90302' y='1175' />
        <zone h='37368' id='7' name='Total Cases v/s Deaths' w='25961' x='0' y='9871' />
        <zone h='13866' id='8' name='Total Cases v/s Deaths' pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' type-v2='size' w='9344' x='90479' y='27497' />
        <zone h='47004' id='9' name='Dual axis' show-title='false' w='42578' x='-59' y='52761' />
        <zone h='7168' id='10' name='Dual axis' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Population:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9462' x='90479' y='41363' />
        <zone h='6816' id='11' name='Dual axis' pane-specification-id='3' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' show-title='false' type-v2='color' w='8279' x='91425' y='48296' />
        <zone h='38425' id='12' name='Mortality Rate' w='22354' x='25547' y='9048' />
        <zone h='3995' id='13' name='Sheet 7' w='27972' x='31579' y='1763' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='14' param='vert' type-v2='layout-flow' w='99054' x='473' y='940'>
                <zone fixed-size='32' h='3995' id='13' is-fixed='true' name='Sheet 7' w='27972' x='31579' y='1763'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38425' id='12' is-fixed='true' name='Mortality Rate' w='22354' x='25547' y='9048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39130' id='3' is-fixed='true' name='Top 10 state with Cases' w='41455' x='48492' y='9401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37368' id='7' is-fixed='true' name='Total Cases v/s Deaths' w='25961' x='0' y='9871'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13866' id='8' name='Total Cases v/s Deaths' pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' type-v2='size' w='9344' x='90479' y='27497'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51469' id='4' is-fixed='true' name='Total Deaths' w='34299' x='65523' y='48296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50999' id='5' is-fixed='true' name='Discharged states' w='22945' x='42519' y='48531'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25617' id='6' name='Discharged states' pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' type-v2='color' w='9521' x='90302' y='1175'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7168' id='10' name='Dual axis' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Population:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9462' x='90479' y='41363'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47004' id='9' is-fixed='true' name='Dual axis' show-title='false' w='42578' x='-59' y='52761'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6816' id='11' name='Dual axis' pane-specification-id='3' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' show-title='false' type-v2='color' w='8279' x='91425' y='48296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80A0CFF1-966B-4360-8204-BB9E5BCB9884}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 state with Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD0EB4DA-582E-475F-93E8-DC081F645472}' />
    </window>
    <window class='worksheet' name='Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{98A5C0EF-657D-47A3-8A82-F5DA92126507}' />
    </window>
    <window class='worksheet' name='Discharged states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E17C8AC-3C2A-4E9B-B514-DF2AA3F906C4}' />
    </window>
    <window class='worksheet' name='Total Cases v/s Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C404135D-A32A-4C56-BADB-B02081F48008}' />
    </window>
    <window class='worksheet' name='Mortality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13A42AC8-C5DE-4403-BECF-F8D93EF04AE5}' />
    </window>
    <window class='worksheet' name='Dual axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Population:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DCB8B15-F74F-41B9-A6C7-B5894BD7918C}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4AF6F0EA-360A-4366-913F-D94924B2F326}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Discharged states'>
          <highlight>
            <color-one-way>
              <field>[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[none:State/UTs:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Dual axis'>
          <zoom type='entire-view' />
          <highlight field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Mortality Rate' />
        <viewpoint name='Sheet 7' />
        <viewpoint name='Top 10 state with Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases v/s Deaths'>
          <zoom type='entire-view' />
          <highlight field='[federated.1xgxz7r0hljygb1bkli3v1ed0fbb].[sum:Discharged:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8A29B466-F1A2-4FA7-8A10-75CC9D6E6D3B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Discharged states' width='192'>
      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
      Cb1kawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dual axis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 state with Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases v/s Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Deaths' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
